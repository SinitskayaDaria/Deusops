# Stage: Build 
# Используем легковесный образ Go на базе Alpine для сборки
FROM golang:1.21-alpine AS build

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем все исходные файлы в контейнер 
COPY . .

# Компилируем Go-приложение в бинарник с именем server
RUN go build -o server main.go

# Stage: Run 
# Используем минимальный образ Alpine для запуска
FROM alpine:3.18

# Создаем непривилегированного пользователя
RUN adduser -D appuser

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем собранный бинарник из предыдущего этапа
COPY --from=build /app/server .

# Устанавливаем владельца файлов — непривилегированный пользователь
RUN chown -R appuser:appuser /app

# Запускаем контейнер от имени непривилегированного пользователя
USER appuser

# Открываем порт 8080 для доступа извне
EXPOSE 8080

# Устанавливаем переменную окружения 
ENV APP_PORT=8080

# Запускаем бинарник как точку входа
ENTRYPOINT ["./server"]
